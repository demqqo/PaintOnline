{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nclass CanvasState {\n  constructor() {\n    this.canvas = null;\n    this.undoList = [];\n    this.redoList = [];\n    makeAutoObservable(this);\n  }\n  setCanvas(canvas) {\n    this.canvas = canvas;\n  }\n  pushToUndo(data) {\n    this.undoList.push(data);\n  }\n  pushToRedo(data) {\n    this.redoList.push(data);\n  }\n  undo() {\n    let ctx = this.canvas.getContext('2d');\n    if (this.undoList.length > 0) {\n      let dataURL = this.undoList.pop();\n      this.redoList.push(this.canvas.toDataIRL);\n      let img = new Image();\n      img.src = dataURL;\n      img.onload = () => {\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      };\n    } else {\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n  }\n  redo() {\n    let ctx = this.canvas.getContext('2d');\n    if (this.redoList.length > 0) {\n      let dataURL = this.redoList.pop();\n      this.undoList.push(this.canvas.toDataIRL());\n      let img = new Image();\n      img.src = dataURL;\n      img.onload = () => {\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      };\n    } else {}\n  }\n}\nexport default new CanvasState();","map":{"version":3,"names":["makeAutoObservable","CanvasState","constructor","canvas","undoList","redoList","setCanvas","pushToUndo","data","push","pushToRedo","undo","ctx","getContext","length","dataURL","pop","toDataIRL","img","Image","src","onload","clearRect","width","height","drawImage","redo"],"sources":["D:/prog/paint-online/src/store/canvasState.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\n\r\nclass CanvasState{\r\n    canvas= null\r\n    undoList =[]\r\n    redoList=[]\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n    setCanvas(canvas){\r\n        this.canvas = canvas\r\n    }\r\n\r\n    pushToUndo(data){\r\n        this.undoList.push(data)\r\n    }\r\n\r\n    pushToRedo(data){\r\n        this.redoList.push(data)\r\n    }\r\n\r\n    undo(){\r\n        let ctx= this.canvas.getContext('2d')\r\n        if(this.undoList.length > 0){\r\n            \r\n            let dataURL = this.undoList.pop()\r\n            this.redoList.push(this.canvas.toDataIRL)\r\n            let img = new Image()\r\n            img.src = dataURL\r\n            img.onload=()=>{\r\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n            }\r\n        }else{\r\n            ctx.clearRect(0,0,this.canvas.width, this.canvas.height)\r\n        }\r\n    }\r\n\r\n    redo(){\r\n        let ctx= this.canvas.getContext('2d')\r\n        if(this.redoList.length > 0){\r\n            let dataURL = this.redoList.pop()\r\n            this.undoList.push(this.canvas.toDataIRL())\r\n            let img = new Image()\r\n            img.src = dataURL\r\n            img.onload=()=>{\r\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n            }\r\n        }else{\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default new CanvasState();"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AAGzC,MAAMC,WAAW;EAIbC,WAAWA,CAAA,EAAE;IAAA,KAHbC,MAAM,GAAE,IAAI;IAAA,KACZC,QAAQ,GAAE,EAAE;IAAA,KACZC,QAAQ,GAAC,EAAE;IAEPL,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EACAM,SAASA,CAACH,MAAM,EAAC;IACb,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EAEAI,UAAUA,CAACC,IAAI,EAAC;IACZ,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAACD,IAAI,CAAC;EAC5B;EAEAE,UAAUA,CAACF,IAAI,EAAC;IACZ,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACD,IAAI,CAAC;EAC5B;EAEAG,IAAIA,CAAA,EAAE;IACF,IAAIC,GAAG,GAAE,IAAI,CAACT,MAAM,CAACU,UAAU,CAAC,IAAI,CAAC;IACrC,IAAG,IAAI,CAACT,QAAQ,CAACU,MAAM,GAAG,CAAC,EAAC;MAExB,IAAIC,OAAO,GAAG,IAAI,CAACX,QAAQ,CAACY,GAAG,CAAC,CAAC;MACjC,IAAI,CAACX,QAAQ,CAACI,IAAI,CAAC,IAAI,CAACN,MAAM,CAACc,SAAS,CAAC;MACzC,IAAIC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACrBD,GAAG,CAACE,GAAG,GAAGL,OAAO;MACjBG,GAAG,CAACG,MAAM,GAAC,MAAI;QACXT,GAAG,CAACU,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACnB,MAAM,CAACoB,KAAK,EAAE,IAAI,CAACpB,MAAM,CAACqB,MAAM,CAAC;QAC1DZ,GAAG,CAACa,SAAS,CAACP,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAACf,MAAM,CAACoB,KAAK,EAAE,IAAI,CAACpB,MAAM,CAACqB,MAAM,CAAC;MACnE,CAAC;IACL,CAAC,MAAI;MACDZ,GAAG,CAACU,SAAS,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAACnB,MAAM,CAACoB,KAAK,EAAE,IAAI,CAACpB,MAAM,CAACqB,MAAM,CAAC;IAC5D;EACJ;EAEAE,IAAIA,CAAA,EAAE;IACF,IAAId,GAAG,GAAE,IAAI,CAACT,MAAM,CAACU,UAAU,CAAC,IAAI,CAAC;IACrC,IAAG,IAAI,CAACR,QAAQ,CAACS,MAAM,GAAG,CAAC,EAAC;MACxB,IAAIC,OAAO,GAAG,IAAI,CAACV,QAAQ,CAACW,GAAG,CAAC,CAAC;MACjC,IAAI,CAACZ,QAAQ,CAACK,IAAI,CAAC,IAAI,CAACN,MAAM,CAACc,SAAS,CAAC,CAAC,CAAC;MAC3C,IAAIC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACrBD,GAAG,CAACE,GAAG,GAAGL,OAAO;MACjBG,GAAG,CAACG,MAAM,GAAC,MAAI;QACXT,GAAG,CAACU,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACnB,MAAM,CAACoB,KAAK,EAAE,IAAI,CAACpB,MAAM,CAACqB,MAAM,CAAC;QAC1DZ,GAAG,CAACa,SAAS,CAACP,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAACf,MAAM,CAACoB,KAAK,EAAE,IAAI,CAACpB,MAAM,CAACqB,MAAM,CAAC;MACnE,CAAC;IACL,CAAC,MAAI,CAEL;EACJ;AACJ;AAEA,eAAe,IAAIvB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}