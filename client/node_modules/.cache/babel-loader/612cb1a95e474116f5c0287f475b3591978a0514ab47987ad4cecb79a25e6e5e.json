{"ast":null,"code":"var _jsxFileName = \"D:\\\\prog\\\\paint-online\\\\src\\\\components\\\\Toolbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/toolbar.scss';\nimport toolState from '../store/toolState.js';\nimport canvasState from '../store/canvasState';\nimport Brush from '../tools/Brush';\nimport Rect from '../tools/Rect';\nimport Eraser from '../tools/Eraser';\nimport Line from '../tools/Line';\nimport Circle from '../tools/Circle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toolbar = () => {\n  _s();\n  const [color, setColor] = useState('#000000');\n  const [eraserActive, setEraserActive] = useState(false);\n  const changeColor = e => {\n    setColor(e.target.value);\n    toolState.setStrokeColor(color);\n    toolState.setFillColor(color);\n    console.log(color);\n  };\n  const activeEraser = e => {\n    toolState.setTool(new Eraser(canvasState.canvas));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn brush\",\n      onClick: () => toolState.setTool(new Brush(canvasState.canvas))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn rect\",\n      onClick: () => toolState.setTool(new Rect(canvasState.canvas))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn circle\",\n      onClick: () => {\n        toolState.setTool(new Circle(canvasState.canvas));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn eraser\",\n      onClick: activeEraser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn line\",\n      onClick: () => toolState.setTool(new Line(canvasState.canvas))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: changeColor,\n      type: \"color\",\n      className: \"toolbar__btn colors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn redo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Toolbar, \"bjmDBU7NQSfUEaKLqEd/Fr9nO5U=\");\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","useState","toolState","canvasState","Brush","Rect","Eraser","Line","Circle","jsxDEV","_jsxDEV","Toolbar","_s","color","setColor","eraserActive","setEraserActive","changeColor","e","target","value","setStrokeColor","setFillColor","console","log","activeEraser","setTool","canvas","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","_c","$RefreshReg$"],"sources":["D:/prog/paint-online/src/components/Toolbar.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport '../styles/toolbar.scss'\r\nimport toolState from '../store/toolState.js'\r\nimport canvasState from '../store/canvasState'\r\nimport Brush from '../tools/Brush'\r\nimport Rect from '../tools/Rect'\r\nimport Eraser from '../tools/Eraser'\r\nimport Line from '../tools/Line'\r\nimport Circle from '../tools/Circle'\r\n\r\n\r\n\r\nconst Toolbar = () => {\r\nconst [color, setColor] = useState('#000000')\r\nconst [eraserActive, setEraserActive] = useState(false)\r\n  const changeColor = (e) => {\r\n    setColor(e.target.value)\r\n    toolState.setStrokeColor(color)\r\n    toolState.setFillColor(color)\r\n    console.log(color)\r\n  }\r\n  const activeEraser = (e) => {\r\n  toolState.setTool(new Eraser(canvasState.canvas))\r\n  \r\n  }\r\n  return (\r\n    <div className=\"toolbar\">\r\n        <button className='toolbar__btn brush' onClick={()=>toolState.setTool(new Brush(canvasState.canvas))}/>\r\n        <button className='toolbar__btn rect' onClick={()=>toolState.setTool(new Rect(canvasState.canvas))}/>\r\n        <button className='toolbar__btn circle' onClick={()=>{toolState.setTool(new Circle(canvasState.canvas))}}/>\r\n        <button className='toolbar__btn eraser' onClick={activeEraser}/>\r\n        <button className='toolbar__btn line' onClick={()=>toolState.setTool(new Line(canvasState.canvas))}/>\r\n        <input onChange={changeColor} type=\"color\" className='toolbar__btn colors' />\r\n        \r\n        <button className='toolbar__btn undo' />\r\n        <button className='toolbar__btn redo' />\r\n        <button className='toolbar__btn save' />\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Toolbar\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}