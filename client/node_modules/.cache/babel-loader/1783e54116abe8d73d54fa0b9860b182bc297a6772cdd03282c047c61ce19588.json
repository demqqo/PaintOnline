{"ast":null,"code":"var _jsxFileName = \"D:\\\\prog\\\\paint-online\\\\client\\\\src\\\\components\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport canvasState from '../store/canvasState';\nimport toolState from '../store/toolState';\nimport Brush from '../tools/Brush';\nimport '../styles/canvas.scss';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = _s(observer(_c = _s(() => {\n  _s();\n  const [show, setShow] = useState(true);\n  const usernameRef = useRef();\n  const canvasRef = useRef();\n  const params = useParams();\n  const socketRef = useRef(null);\n  useEffect(() => {\n    canvasState.setCanvas(canvasRef.current);\n    toolState.setTool(new Brush(canvasRef.current));\n  }, []);\n  useEffect(() => {\n    if (canvasState.username) {\n      console.log('Attempting to open WebSocket connection...');\n      socketRef.current = new WebSocket(`ws://localhost:5000`);\n      socketRef.current.onopen = () => {\n        console.log(`Connection established: ${canvasState.username}`);\n        const message = JSON.stringify({\n          id: params.id,\n          username: canvasState.username,\n          method: 'connection'\n        });\n        console.log('Sending message:', message);\n        if (socketRef.current.readyState === WebSocket.OPEN) {\n          socketRef.current.send(message);\n        } else {\n          console.error('WebSocket is not open. ReadyState:', socketRef.current.readyState);\n        }\n      };\n      socketRef.current.onmessage = event => {\n        console.log('Message received:', event.data);\n        try {\n          const msg = JSON.parse(event.data);\n          switch (msg.method) {\n            case 'connection':\n              console.log(`User ${msg.username} connected`);\n              break;\n            default:\n              console.log('Unknown method:', msg.method);\n              break;\n          }\n        } catch (error) {\n          console.error('Error parsing message:', error);\n        }\n      };\n      socketRef.current.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n      socketRef.current.onclose = event => {\n        console.log('WebSocket connection closed:', event);\n      };\n      return () => {\n        socketRef.current.close();\n        console.log('WebSocket connection closed');\n      };\n    }\n  }, [canvasState.username, params.id]);\n  const mouseDownHandler = () => {\n    canvasState.pushToUndo(canvasRef.current.toDataURL());\n  };\n  const connectHandler = () => {\n    setShow(false);\n    canvasState.setUsername(usernameRef.current.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: () => {},\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: usernameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: connectHandler,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      onMouseDown: mouseDownHandler,\n      ref: canvasRef,\n      width: 600,\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}, \"Gb1NRzCx/i6kXPH7DU1b59shR40=\", false, function () {\n  return [useParams];\n})), \"Gb1NRzCx/i6kXPH7DU1b59shR40=\", false, function () {\n  return [useParams];\n});\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$observer\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","observer","canvasState","toolState","Brush","Button","Modal","useParams","jsxDEV","_jsxDEV","Canvas","_s","_c","show","setShow","usernameRef","canvasRef","params","socketRef","setCanvas","current","setTool","username","console","log","WebSocket","onopen","message","JSON","stringify","id","method","readyState","OPEN","send","error","onmessage","event","data","msg","parse","onerror","onclose","close","mouseDownHandler","pushToUndo","toDataURL","connectHandler","setUsername","value","className","children","onHide","Header","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","type","ref","Footer","variant","onClick","onMouseDown","width","height","_c2","$RefreshReg$"],"sources":["D:/prog/paint-online/client/src/components/Canvas.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport canvasState from '../store/canvasState';\r\nimport toolState from '../store/toolState';\r\nimport Brush from '../tools/Brush';\r\nimport '../styles/canvas.scss';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Canvas = observer(() => {\r\n    const [show, setShow] = useState(true);\r\n    const usernameRef = useRef();\r\n    const canvasRef = useRef();\r\n    const params = useParams();\r\n    const socketRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        canvasState.setCanvas(canvasRef.current);\r\n        toolState.setTool(new Brush(canvasRef.current));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (canvasState.username) {\r\n            console.log('Attempting to open WebSocket connection...');\r\n            socketRef.current = new WebSocket(`ws://localhost:5000`);\r\n\r\n            socketRef.current.onopen = () => {\r\n                console.log(`Connection established: ${canvasState.username}`);\r\n                const message = JSON.stringify({\r\n                    id: params.id,\r\n                    username: canvasState.username,\r\n                    method: 'connection'\r\n                });\r\n                console.log('Sending message:', message);\r\n                if (socketRef.current.readyState === WebSocket.OPEN) {\r\n                    socketRef.current.send(message);\r\n                } else {\r\n                    console.error('WebSocket is not open. ReadyState:', socketRef.current.readyState);\r\n                }\r\n            };\r\n\r\n            socketRef.current.onmessage = (event) => {\r\n                console.log('Message received:', event.data);\r\n                try {\r\n                    const msg = JSON.parse(event.data);\r\n                    switch (msg.method) {\r\n                        case 'connection':\r\n                            console.log(`User ${msg.username} connected`);\r\n                            break;\r\n                        default:\r\n                            console.log('Unknown method:', msg.method);\r\n                            break;\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error parsing message:', error);\r\n                }\r\n            };\r\n\r\n            socketRef.current.onerror = (error) => {\r\n                console.error('WebSocket error:', error);\r\n            };\r\n\r\n            socketRef.current.onclose = (event) => {\r\n                console.log('WebSocket connection closed:', event);\r\n            };\r\n\r\n            return () => {\r\n                socketRef.current.close();\r\n                console.log('WebSocket connection closed');\r\n            };\r\n        }\r\n    }, [canvasState.username, params.id]);\r\n\r\n    const mouseDownHandler = () => {\r\n        canvasState.pushToUndo(canvasRef.current.toDataURL());\r\n    };\r\n\r\n    const connectHandler = () => {\r\n        setShow(false);\r\n        canvasState.setUsername(usernameRef.current.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"canvas\">\r\n            <Modal show={show} onHide={() => {}}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Enter your name</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <input type=\"text\" ref={usernameRef} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={connectHandler}>\r\n                        Enter\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <canvas onMouseDown={mouseDownHandler} ref={canvasRef} width={600} height={400} />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Canvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}