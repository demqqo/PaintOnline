{"ast":null,"code":"import Tool from './Tool';\nexport default class Brush extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.listen();\n  }\n  listen() {\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n  }\n  mouseUpHandler(e) {\n    this.mouseDown = false;\n  }\n  mouseDownHandler(e) {\n    this.mouseDown = true;\n    this.ctx.beginPath();\n    this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n  }\n  mouseMoveHandler(e) {\n    // if(this.mouseDown){\n    //     //this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\n    //     this.socket.send(JSON.stringify({\n    //         method: 'draw',\n    //         id: this.id,\n    //         figure: {\n    //             type:'brush',\n    //             x: e.pageX - e.target.offsetLeft,\n    //             y: e.pageY - e.target.offsetTop \n    //         }\n    //     }))\n    // }\n    if (this.mouseDown) {\n      const x = e.pageX - e.target.offsetLeft;\n      const y = e.pageY - e.target.offsetTop;\n      Brush.draw(this.ctx, x, y);\n      if (this.socket && this.socket.send) {\n        this.socket.send(JSON.stringify({\n          method: 'draw',\n          id: this.id,\n          figure: {\n            type: 'brush',\n            x: x,\n            y: y\n          }\n        }));\n      } else {\n        console.error('Socket is not initialized or send method is not available');\n      }\n    }\n  }\n  static draw(ctx, x, y) {\n    ctx.lineTo(x, y);\n    ctx.stroke();\n  }\n}","map":{"version":3,"names":["Tool","Brush","constructor","canvas","socket","id","listen","onmousemove","mouseMoveHandler","bind","onmouseup","mouseUpHandler","onmousedown","mouseDownHandler","e","mouseDown","ctx","beginPath","moveTo","pageX","target","offsetLeft","pageY","offsetTop","x","y","draw","send","JSON","stringify","method","figure","type","console","error","lineTo","stroke"],"sources":["D:/prog/paint-online/client/src/tools/Brush.js"],"sourcesContent":["import Tool from './Tool'\r\n\r\nexport default class Brush extends Tool{\r\n    constructor(canvas, socket, id){\r\n        super(canvas, socket, id)\r\n        this.listen()\r\n    }\r\n\r\n    listen(){\r\n        this.canvas.onmousemove=this.mouseMoveHandler.bind(this)\r\n        this.canvas.onmouseup=this.mouseUpHandler.bind(this)\r\n        this.canvas.onmousedown=this.mouseDownHandler.bind(this)\r\n    }\r\n\r\n    mouseUpHandler(e){\r\n        this.mouseDown = false\r\n    }\r\n    mouseDownHandler(e){\r\n        this.mouseDown = true\r\n        this.ctx.beginPath()\r\n        this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\r\n    }\r\n    mouseMoveHandler(e){\r\n        // if(this.mouseDown){\r\n        //     //this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\r\n        //     this.socket.send(JSON.stringify({\r\n        //         method: 'draw',\r\n        //         id: this.id,\r\n        //         figure: {\r\n        //             type:'brush',\r\n        //             x: e.pageX - e.target.offsetLeft,\r\n        //             y: e.pageY - e.target.offsetTop \r\n        //         }\r\n        //     }))\r\n        // }\r\n        if (this.mouseDown) {\r\n            const x = e.pageX - e.target.offsetLeft;\r\n            const y = e.pageY - e.target.offsetTop;\r\n            Brush.draw(this.ctx, x, y);\r\n            if (this.socket && this.socket.send) {\r\n                this.socket.send(JSON.stringify({\r\n                    method: 'draw',\r\n                    id: this.id,\r\n                    figure: {\r\n                        type: 'brush',\r\n                        x: x,\r\n                        y: y\r\n                    }\r\n                }));\r\n            } else {\r\n                console.error('Socket is not initialized or send method is not available');\r\n            }\r\n        }\r\n    }\r\n    static draw(ctx, x, y){\r\n        ctx.lineTo(x, y)\r\n        ctx.stroke()\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,QAAQ;AAEzB,eAAe,MAAMC,KAAK,SAASD,IAAI;EACnCE,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAEC,EAAE,EAAC;IAC3B,KAAK,CAACF,MAAM,EAAEC,MAAM,EAAEC,EAAE,CAAC;IACzB,IAAI,CAACC,MAAM,CAAC,CAAC;EACjB;EAEAA,MAAMA,CAAA,EAAE;IACJ,IAAI,CAACH,MAAM,CAACI,WAAW,GAAC,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;IACxD,IAAI,CAACN,MAAM,CAACO,SAAS,GAAC,IAAI,CAACC,cAAc,CAACF,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACN,MAAM,CAACS,WAAW,GAAC,IAAI,CAACC,gBAAgB,CAACJ,IAAI,CAAC,IAAI,CAAC;EAC5D;EAEAE,cAAcA,CAACG,CAAC,EAAC;IACb,IAAI,CAACC,SAAS,GAAG,KAAK;EAC1B;EACAF,gBAAgBA,CAACC,CAAC,EAAC;IACf,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,GAAG,CAACC,SAAS,CAAC,CAAC;IACpB,IAAI,CAACD,GAAG,CAACE,MAAM,CAACJ,CAAC,CAACK,KAAK,GAAGL,CAAC,CAACM,MAAM,CAACC,UAAU,EAAEP,CAAC,CAACQ,KAAK,GAAGR,CAAC,CAACM,MAAM,CAACG,SAAS,CAAC;EAChF;EACAf,gBAAgBA,CAACM,CAAC,EAAC;IACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,CAACC,SAAS,EAAE;MAChB,MAAMS,CAAC,GAAGV,CAAC,CAACK,KAAK,GAAGL,CAAC,CAACM,MAAM,CAACC,UAAU;MACvC,MAAMI,CAAC,GAAGX,CAAC,CAACQ,KAAK,GAAGR,CAAC,CAACM,MAAM,CAACG,SAAS;MACtCtB,KAAK,CAACyB,IAAI,CAAC,IAAI,CAACV,GAAG,EAAEQ,CAAC,EAAEC,CAAC,CAAC;MAC1B,IAAI,IAAI,CAACrB,MAAM,IAAI,IAAI,CAACA,MAAM,CAACuB,IAAI,EAAE;QACjC,IAAI,CAACvB,MAAM,CAACuB,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UAC5BC,MAAM,EAAE,MAAM;UACdzB,EAAE,EAAE,IAAI,CAACA,EAAE;UACX0B,MAAM,EAAE;YACJC,IAAI,EAAE,OAAO;YACbR,CAAC,EAAEA,CAAC;YACJC,CAAC,EAAEA;UACP;QACJ,CAAC,CAAC,CAAC;MACP,CAAC,MAAM;QACHQ,OAAO,CAACC,KAAK,CAAC,2DAA2D,CAAC;MAC9E;IACJ;EACJ;EACA,OAAOR,IAAIA,CAACV,GAAG,EAAEQ,CAAC,EAAEC,CAAC,EAAC;IAClBT,GAAG,CAACmB,MAAM,CAACX,CAAC,EAAEC,CAAC,CAAC;IAChBT,GAAG,CAACoB,MAAM,CAAC,CAAC;EAChB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}