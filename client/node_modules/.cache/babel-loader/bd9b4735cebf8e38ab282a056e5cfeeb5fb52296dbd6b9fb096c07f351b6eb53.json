{"ast":null,"code":"var _jsxFileName = \"D:\\\\prog\\\\paint-online\\\\src\\\\components\\\\SettingBar.js\";\nimport React from 'react';\nimport '../styles/toolbar.scss';\nimport toolState from '../store/toolState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingBar = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settingbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"line-width\",\n      children: \"Line width\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => toolState.setLineWidth(e.target.value),\n      style: {\n        marginLeft: '0 10px 0 10px'\n      },\n      id: \"line-width\",\n      type: \"number\",\n      defaultValue: 1,\n      min: 1,\n      max: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"stroke-color\",\n      children: \"Line width\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => toolState.setStrokeColor(e.target.value),\n      style: {\n        marginLeft: '0 10px 0 10px'\n      },\n      id: \"stroke-color\",\n      type: \"color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = SettingBar;\nexport default SettingBar;\nvar _c;\n$RefreshReg$(_c, \"SettingBar\");","map":{"version":3,"names":["React","toolState","jsxDEV","_jsxDEV","SettingBar","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","setLineWidth","target","value","style","marginLeft","id","type","defaultValue","min","max","setStrokeColor","_c","$RefreshReg$"],"sources":["D:/prog/paint-online/src/components/SettingBar.js"],"sourcesContent":["import React from 'react'\r\nimport '../styles/toolbar.scss'\r\nimport toolState from '../store/toolState'\r\n\r\nconst SettingBar = () => {\r\n  \r\n  return (\r\n    <div className=\"settingbar\">\r\n      <label htmlFor='line-width'>Line width</label>\r\n      <input \r\n        onChange={e=>toolState.setLineWidth(e.target.value)}\r\n        style={{marginLeft:'0 10px 0 10px'}} \r\n        id='line-width'   \r\n        type=\"number\" \r\n        defaultValue={1} \r\n        min={1} \r\n        max={50}\r\n        />\r\n        <label htmlFor='stroke-color'>Line width</label>\r\n        <input \r\n        onChange={e=>toolState.setStrokeColor(e.target.value)}\r\n        style={{marginLeft:'0 10px 0 10px'}} \r\n        id='stroke-color'   \r\n        type=\"color\" \r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SettingBar\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAC/B,OAAOC,SAAS,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAEvB,oBACED,OAAA;IAAKE,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBH,OAAA;MAAOI,OAAO,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9CR,OAAA;MACES,QAAQ,EAAEC,CAAC,IAAEZ,SAAS,CAACa,YAAY,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;MACpDC,KAAK,EAAE;QAACC,UAAU,EAAC;MAAe,CAAE;MACpCC,EAAE,EAAC,YAAY;MACfC,IAAI,EAAC,QAAQ;MACbC,YAAY,EAAE,CAAE;MAChBC,GAAG,EAAE,CAAE;MACPC,GAAG,EAAE;IAAG;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACFR,OAAA;MAAOI,OAAO,EAAC,cAAc;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAChDR,OAAA;MACAS,QAAQ,EAAEC,CAAC,IAAEZ,SAAS,CAACuB,cAAc,CAACX,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;MACtDC,KAAK,EAAE;QAACC,UAAU,EAAC;MAAe,CAAE;MACpCC,EAAE,EAAC,cAAc;MACjBC,IAAI,EAAC;IAAO;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAAc,EAAA,GAvBKrB,UAAU;AAyBhB,eAAeA,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}